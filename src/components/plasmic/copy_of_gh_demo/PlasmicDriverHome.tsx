// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */

/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */

// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: gjjqSKbRqXuaUimkLf8eMG
// Component: 1NSEZMbzAPYiqq

import * as React from "react";

import * as p from "@plasmicapp/react-web";
import * as ph from "@plasmicapp/react-web/lib/host";

import {
  usePlasmicDataConfig,
  executePlasmicDataOp,
  useDependencyAwareQuery
} from "@plasmicapp/react-web/lib/data-sources";

import {
  hasVariant,
  classNames,
  wrapWithClassName,
  createPlasmicElementProxy,
  makeFragment,
  MultiChoiceArg,
  SingleBooleanChoiceArg,
  SingleChoiceArg,
  pick,
  omit,
  useTrigger,
  StrictProps,
  deriveRenderOpts,
  ensureGlobalVariants
} from "@plasmicapp/react-web";
import { GHHeading } from "../../../../components/Heading/Heading"; // plasmic-import: gf_vrZiZw-kFex/codeComponent
import GhLogoLink from "../../GhLogoLink"; // plasmic-import: q4FPf_vi5_PT2a/component
import { AntdPopover } from "../../../../components/Popover/Antd/Popover"; // plasmic-import: y_F7Hy83dhbOWl/codeComponent
import { GHPopoverItemWrapper } from "../../../../components/Popover/GH/PopoverItemWrapper"; // plasmic-import: G_UscGHl-TGIhr/codeComponent
import { GHLink } from "../../../../components/Link/Link"; // plasmic-import: Y3ppP90YtTpcYt/codeComponent
import { GHButton } from "../../../../components/Button/Button"; // plasmic-import: P54UprMnHkN0Wd/codeComponent
import { GHDrawer } from "../../../../components/Drawer/Drawer"; // plasmic-import: NHuGAcSE36OQ7w/codeComponent
import { GHImage } from "../../../../components/Image/Image"; // plasmic-import: QSbPt8k9Nh7KxW/codeComponent
import { GHRegistrationForm } from "../../../../components/Form/RegistrationForm"; // plasmic-import: izSwC4ph1W6SoC/codeComponent
import { GHCopy } from "../../../../components/Copy/Copy"; // plasmic-import: tmg5FOK9urcssL/codeComponent
import { GHList } from "../../../../components/List/List"; // plasmic-import: H_mjbqwBQ0IWH_/codeComponent
import { Fetcher } from "@plasmicapp/react-web/lib/data-sources"; // plasmic-import: lhOZW766xR2D7u/codeComponent

import { useScreenVariants as useScreenVariantssE0Ngbim2HoNtM } from "./PlasmicGlobalVariant__Screen"; // plasmic-import: sE0Ngbim2HONtM/globalVariant

import "@plasmicapp/react-web/lib/plasmic.css";

import projectcss from "./plasmic_copy_of_gh_demo.module.css"; // plasmic-import: gjjqSKbRqXuaUimkLf8eMG/projectcss
import sty from "./PlasmicDriverHome.module.css"; // plasmic-import: 1NSEZMbzAPYiqq/css

export type PlasmicDriverHome__VariantMembers = {};
export type PlasmicDriverHome__VariantsArgs = {};
type VariantPropType = keyof PlasmicDriverHome__VariantsArgs;
export const PlasmicDriverHome__VariantProps = new Array<VariantPropType>();

export type PlasmicDriverHome__ArgsType = {};
type ArgPropType = keyof PlasmicDriverHome__ArgsType;
export const PlasmicDriverHome__ArgProps = new Array<ArgPropType>();

export type PlasmicDriverHome__OverridesType = {
  root?: p.Flex<"div">;
  ghLogoLink?: p.Flex<typeof GhLogoLink>;
  ghDrawer?: p.Flex<typeof GHDrawer>;
  ghRegistrationForm?: p.Flex<typeof GHRegistrationForm>;
  ghList?: p.Flex<typeof GHList>;
};

export interface DefaultDriverHomeProps {
  className?: string;
}

const __wrapUserFunction =
  globalThis.__PlasmicWrapUserFunction ?? ((loc, fn) => fn());
const __wrapUserPromise =
  globalThis.__PlasmicWrapUserPromise ??
  (async (loc, promise) => {
    return await promise;
  });

function PlasmicDriverHome__RenderFunc(props: {
  variants: PlasmicDriverHome__VariantsArgs;
  args: PlasmicDriverHome__ArgsType;
  overrides: PlasmicDriverHome__OverridesType;
  forNode?: string;
}) {
  const { variants, overrides, forNode } = props;

  const $ctx = ph.useDataEnv?.() || {};
  const args = React.useMemo(() => Object.assign({}, props.args), [props.args]);

  const $props = {
    ...args,
    ...variants
  };
  const refsRef = React.useRef({});
  const $refs = refsRef.current;

  const currentUser = p.useCurrentUser?.() || {};
  const [$queries, setDollarQueries] = React.useState({});

  useDependencyAwareQuery({
    name: "remoteData",
    getDataOp: () => ({
      sourceId: "usx6duxPY2E7PSDia3oimw",
      opId: "be2521506b32918e9c931d27a3dfa3cab4e939ea69a57a5748a376a8d17c101a0b91c3cbd21dc030c3f0fc63954d31f3353e137cb8a6b313ea05d6193dd6c295fad3309f664f522de8569fd5c9a84e399138de89f89078c71ec900b9bf83371f5c8093f2c1240c5f06eecf375c8dad2eef1136f6cec1fda4696d95c2ab0c07062d825b43d14ace9de735c4e4db848844409cce218be7da948a29702057d171e76cfc121d612ec0dd4d",
      userArgs: {},
      cacheKey: "plasmic.$.G9BLkd951NwEhF.$.",
      invalidatedKeys: ["plasmic_refresh_all"],
      roleId: null
    }),
    $queries,
    setDollarQueries
  });

  const globalVariants = ensureGlobalVariants({
    screen: useScreenVariantssE0Ngbim2HoNtM()
  });

  return (
    <React.Fragment>
      {}

      <div className={projectcss.plasmic_page_wrapper}>
        <div
          data-plasmic-name={"root"}
          data-plasmic-override={overrides.root}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          className={classNames(
            projectcss.all,
            projectcss.root_reset,
            projectcss.plasmic_default_styles,
            projectcss.plasmic_mixins,
            projectcss.plasmic_tokens,
            sty.root
          )}
        >
          {true ? (
            <div className={classNames(projectcss.all, sty.freeBox__ioW4N)}>
              <GHHeading
                className={classNames("__wab_instance", sty.ghHeading__tqi7T)}
                color={"#262632" as const}
                variant={"h6" as const}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__it9Oo
                  )}
                >
                  <React.Fragment>
                    <span
                      className={"plasmic_default__all plasmic_default__span"}
                      style={{ fontWeight: 700, color: "#FFFFFF" }}
                    >
                      {" NOTE: "}
                    </span>
                    <React.Fragment>{""}</React.Fragment>
                    <span
                      className={"plasmic_default__all plasmic_default__span"}
                      style={{ color: "#FFFFFF" }}
                    >
                      {
                        "This page is for demo purposes only. It should not be used as an official Grubhub web page."
                      }
                    </span>
                  </React.Fragment>
                </div>
              </GHHeading>
            </div>
          ) : null}
          <div className={classNames(projectcss.all, sty.freeBox__f4LdJ)} />

          <p.Stack
            as={"div"}
            hasGap={true}
            className={classNames(projectcss.all, sty.freeBox__dGTxa)}
          >
            <GhLogoLink
              data-plasmic-name={"ghLogoLink"}
              data-plasmic-override={overrides.ghLogoLink}
              className={classNames("__wab_instance", sty.ghLogoLink)}
            />

            {(
              hasVariant(globalVariants, "screen", "mobileOnly") ? true : true
            ) ? (
              <div className={classNames(projectcss.all, sty.freeBox__eLk7I)}>
                <AntdPopover
                  arrow={false}
                  className={classNames(
                    "__wab_instance",
                    sty.antdPopover___1PRBq
                  )}
                  content={
                    <React.Fragment>
                      <GHPopoverItemWrapper
                        className={classNames(
                          "__wab_instance",
                          sty.ghPopoverItemWrapper__sYvBe
                        )}
                      >
                        <GHLink
                          className={classNames(
                            "__wab_instance",
                            sty.ghLink__yBm0P
                          )}
                          href={"https://driver.grubhub.com/pay/" as const}
                          target={"_self" as const}
                        >
                          {true ? (
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__guM75
                              )}
                            >
                              {"Pay"}
                            </div>
                          ) : null}
                        </GHLink>
                      </GHPopoverItemWrapper>
                      <GHPopoverItemWrapper
                        className={classNames(
                          "__wab_instance",
                          sty.ghPopoverItemWrapper__udheq
                        )}
                      >
                        <GHLink
                          className={classNames(
                            "__wab_instance",
                            sty.ghLink__uB5Pm
                          )}
                          href={
                            "https://driver.grubhub.com/recognition/" as const
                          }
                          target={"_self" as const}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__hlx5P
                            )}
                          >
                            {"Recognition"}
                          </div>
                        </GHLink>
                      </GHPopoverItemWrapper>
                      <GHPopoverItemWrapper
                        className={classNames(
                          "__wab_instance",
                          sty.ghPopoverItemWrapper__wPr6B
                        )}
                      >
                        <GHLink
                          className={classNames(
                            "__wab_instance",
                            sty.ghLink___2N15
                          )}
                          href={"https://driver.grubhub.com/rewards/" as const}
                          target={"_self" as const}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__xdPyl
                            )}
                          >
                            {"Rewards"}
                          </div>
                        </GHLink>
                      </GHPopoverItemWrapper>
                      <GHPopoverItemWrapper
                        className={classNames(
                          "__wab_instance",
                          sty.ghPopoverItemWrapper__ayXse
                        )}
                      >
                        <GHLink
                          className={classNames(
                            "__wab_instance",
                            sty.ghLink__mchRj
                          )}
                          href={
                            "https://driver.grubhub.com/scheduling/" as const
                          }
                          target={"_self" as const}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__aN81Y
                            )}
                          >
                            {"Scheduling"}
                          </div>
                        </GHLink>
                      </GHPopoverItemWrapper>
                      <GHPopoverItemWrapper
                        className={classNames(
                          "__wab_instance",
                          sty.ghPopoverItemWrapper__yeC8
                        )}
                      >
                        <GHLink
                          className={classNames(
                            "__wab_instance",
                            sty.ghLink__eqQi6
                          )}
                          href={"https://driver.grubhub.com/app/" as const}
                          target={"_self" as const}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__niQzD
                            )}
                          >
                            {"Grubhub Driver app"}
                          </div>
                        </GHLink>
                      </GHPopoverItemWrapper>
                    </React.Fragment>
                  }
                  defaultOpen={false}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__xfyyi
                    )}
                  >
                    {"How it works"}
                  </div>
                </AntdPopover>
                <AntdPopover
                  arrow={false}
                  className={classNames(
                    "__wab_instance",
                    sty.antdPopover__ybTi
                  )}
                  content={
                    <GHPopoverItemWrapper
                      className={classNames(
                        "__wab_instance",
                        sty.ghPopoverItemWrapper__nfroy
                      )}
                    >
                      <GHLink
                        className={classNames(
                          "__wab_instance",
                          sty.ghLink___3HiU
                        )}
                        href={
                          "https://driver.grubhub.com/campus-jobs/" as const
                        }
                        target={"_self" as const}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text___97Ftl
                          )}
                        >
                          {"Campus jobs"}
                        </div>
                      </GHLink>
                    </GHPopoverItemWrapper>
                  }
                  defaultOpen={false}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__lcZwg
                    )}
                  >
                    {"Driving oportunities"}
                  </div>
                </AntdPopover>
                <AntdPopover
                  arrow={false}
                  className={classNames(
                    "__wab_instance",
                    sty.antdPopover___4PcF
                  )}
                  content={
                    <React.Fragment>
                      <GHPopoverItemWrapper
                        className={classNames(
                          "__wab_instance",
                          sty.ghPopoverItemWrapper__w8THi
                        )}
                      >
                        <GHLink
                          className={classNames(
                            "__wab_instance",
                            sty.ghLink__cKgTt
                          )}
                          href={"https://driver.grubhub.com/faq/" as const}
                          target={"_self" as const}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__i0VF
                            )}
                          >
                            {"FAQ"}
                          </div>
                        </GHLink>
                      </GHPopoverItemWrapper>
                      <GHPopoverItemWrapper
                        className={classNames(
                          "__wab_instance",
                          sty.ghPopoverItemWrapper___8ZAn1
                        )}
                      >
                        <GHLink
                          className={classNames(
                            "__wab_instance",
                            sty.ghLink__wq0WJ
                          )}
                          href={"https://grubhubdrivershop.com/" as const}
                          target={"_blank" as const}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__sZ2XP
                            )}
                          >
                            {"Driver shop"}
                          </div>
                        </GHLink>
                      </GHPopoverItemWrapper>
                      <GHPopoverItemWrapper
                        className={classNames(
                          "__wab_instance",
                          sty.ghPopoverItemWrapper__sc0Vm
                        )}
                      >
                        <GHLink
                          className={classNames(
                            "__wab_instance",
                            sty.ghLink___0Zu
                          )}
                          href={
                            "https://driver.grubhub.com/driver-safety/" as const
                          }
                          target={"_self" as const}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__lGwM
                            )}
                          >
                            {"Driver Safety"}
                          </div>
                        </GHLink>
                      </GHPopoverItemWrapper>
                      <GHPopoverItemWrapper
                        className={classNames(
                          "__wab_instance",
                          sty.ghPopoverItemWrapper__w0YkM
                        )}
                      >
                        <GHLink
                          className={classNames(
                            "__wab_instance",
                            sty.ghLink__wqkC6
                          )}
                          href={
                            "https://driver.grubhub.com/driver-safety-council/" as const
                          }
                          target={"_self" as const}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__gXkfi
                            )}
                          >
                            {"Driver Safety Council"}
                          </div>
                        </GHLink>
                      </GHPopoverItemWrapper>
                    </React.Fragment>
                  }
                  defaultOpen={false}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__ulQ
                    )}
                  >
                    {"Resources"}
                  </div>
                </AntdPopover>
                <AntdPopover
                  arrow={false}
                  className={classNames(
                    "__wab_instance",
                    sty.antdPopover__hkOtz
                  )}
                  content={
                    <React.Fragment>
                      <GHPopoverItemWrapper
                        className={classNames(
                          "__wab_instance",
                          sty.ghPopoverItemWrapper__huunR
                        )}
                      >
                        <GHLink
                          className={classNames(
                            "__wab_instance",
                            sty.ghLink__ssTEw
                          )}
                          href={
                            "https://driver.grubhub.com/driver-stories/" as const
                          }
                          target={"_self" as const}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__mG3NK
                            )}
                          >
                            {"Driver stories"}
                          </div>
                        </GHLink>
                      </GHPopoverItemWrapper>
                      <GHPopoverItemWrapper
                        className={classNames(
                          "__wab_instance",
                          sty.ghPopoverItemWrapper__sakXg
                        )}
                      >
                        <GHLink
                          className={classNames(
                            "__wab_instance",
                            sty.ghLink__hWgk1
                          )}
                          href={
                            "https://driver.grubhub.com/beyond-the-wheel/" as const
                          }
                          target={"_self" as const}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__yqSfm
                            )}
                          >
                            {"Beyond The Wheel"}
                          </div>
                        </GHLink>
                      </GHPopoverItemWrapper>
                      <GHPopoverItemWrapper
                        className={classNames(
                          "__wab_instance",
                          sty.ghPopoverItemWrapper__yacmM
                        )}
                      >
                        <GHLink
                          className={classNames(
                            "__wab_instance",
                            sty.ghLink__xdQbk
                          )}
                          href={
                            "https://driver.grubhub.com/grant/grant-stories/" as const
                          }
                          target={"_self" as const}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__ckdH
                            )}
                          >
                            {"Driver Grant"}
                          </div>
                        </GHLink>
                      </GHPopoverItemWrapper>
                    </React.Fragment>
                  }
                  defaultOpen={false}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__i9GQb
                    )}
                  >
                    {"Driver stories"}
                  </div>
                </AntdPopover>
                <GHButton
                  backgroundColor={"#0070eb" as const}
                  borderColor={"#0070eb" as const}
                  borderRadius={"2" as const}
                  className={classNames("__wab_instance", sty.ghButton__xJu5G)}
                >
                  <GHLink
                    className={classNames("__wab_instance", sty.ghLink___5FKil)}
                    color={"transparent" as const}
                    href={"#form-one-headline" as const}
                    target={"_self" as const}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text___4GUwE
                      )}
                    >
                      {"Apply"}
                    </div>
                  </GHLink>
                </GHButton>
              </div>
            ) : null}
            {(
              hasVariant(globalVariants, "screen", "mobileOnly")
                ? true
                : hasVariant(globalVariants, "screen", "tabletOnly")
                ? true
                : true
            ) ? (
              <GHDrawer
                data-plasmic-name={"ghDrawer"}
                data-plasmic-override={overrides.ghDrawer}
                className={classNames("__wab_instance", sty.ghDrawer)}
                isOpen={false}
                triggerChildren={
                  <GHImage
                    alt={"Image alt text" as const}
                    backgroundColor={"transparent" as const}
                    backgroundImage={"" as const}
                    className={classNames("__wab_instance", sty.ghImage__dgnyz)}
                    height={"40px" as const}
                    src={
                      "https://driver.grubhub.com/wp-content/themes/drivergrubhubcom/dist/images/driver-hamburger-menu.png" as const
                    }
                    width={"40px" as const}
                  />
                }
              >
                {(
                  hasVariant(globalVariants, "screen", "mobileOnly")
                    ? true
                    : false
                ) ? (
                  <div
                    className={classNames(projectcss.all, sty.freeBox__vxE6)}
                  >
                    <AntdPopover
                      arrow={false}
                      className={classNames(
                        "__wab_instance",
                        sty.antdPopover__n8HxF
                      )}
                      content={
                        <React.Fragment>
                          <GHPopoverItemWrapper
                            className={classNames(
                              "__wab_instance",
                              sty.ghPopoverItemWrapper__qXfph
                            )}
                          >
                            <GHLink
                              className={classNames(
                                "__wab_instance",
                                sty.ghLink__kS8Ld
                              )}
                              href={"https://driver.grubhub.com/pay/" as const}
                              target={"_self" as const}
                            >
                              {true ? (
                                <div
                                  className={classNames(
                                    projectcss.all,
                                    projectcss.__wab_text,
                                    sty.text__ua3Fu
                                  )}
                                >
                                  {"Pay"}
                                </div>
                              ) : null}
                            </GHLink>
                          </GHPopoverItemWrapper>
                          <GHPopoverItemWrapper
                            className={classNames(
                              "__wab_instance",
                              sty.ghPopoverItemWrapper__cqtZ
                            )}
                          >
                            <GHLink
                              className={classNames(
                                "__wab_instance",
                                sty.ghLink__rssCe
                              )}
                              href={
                                "https://driver.grubhub.com/recognition/" as const
                              }
                              target={"_self" as const}
                            >
                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text__y5Ut2
                                )}
                              >
                                {"Recognition"}
                              </div>
                            </GHLink>
                          </GHPopoverItemWrapper>
                          <GHPopoverItemWrapper
                            className={classNames(
                              "__wab_instance",
                              sty.ghPopoverItemWrapper___0Tkqe
                            )}
                          >
                            <GHLink
                              className={classNames(
                                "__wab_instance",
                                sty.ghLink__tpRwd
                              )}
                              href={
                                "https://driver.grubhub.com/rewards/" as const
                              }
                              target={"_self" as const}
                            >
                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text__ljEd
                                )}
                              >
                                {"Rewards"}
                              </div>
                            </GHLink>
                          </GHPopoverItemWrapper>
                          <GHPopoverItemWrapper
                            className={classNames(
                              "__wab_instance",
                              sty.ghPopoverItemWrapper___29AhY
                            )}
                          >
                            <GHLink
                              className={classNames(
                                "__wab_instance",
                                sty.ghLink__vUpUv
                              )}
                              href={
                                "https://driver.grubhub.com/scheduling/" as const
                              }
                              target={"_self" as const}
                            >
                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text__duQbl
                                )}
                              >
                                {"Scheduling"}
                              </div>
                            </GHLink>
                          </GHPopoverItemWrapper>
                          <GHPopoverItemWrapper
                            className={classNames(
                              "__wab_instance",
                              sty.ghPopoverItemWrapper__wtBHe
                            )}
                          >
                            <GHLink
                              className={classNames(
                                "__wab_instance",
                                sty.ghLink__er9Ta
                              )}
                              href={"https://driver.grubhub.com/app/" as const}
                              target={"_self" as const}
                            >
                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text__oNgc0
                                )}
                              >
                                {"Grubhub Driver app"}
                              </div>
                            </GHLink>
                          </GHPopoverItemWrapper>
                        </React.Fragment>
                      }
                      defaultOpen={false}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__lyD9
                        )}
                      >
                        {"How it works"}
                      </div>
                    </AntdPopover>
                    <AntdPopover
                      arrow={false}
                      className={classNames(
                        "__wab_instance",
                        sty.antdPopover___5Z5XS
                      )}
                      content={
                        <GHPopoverItemWrapper
                          className={classNames(
                            "__wab_instance",
                            sty.ghPopoverItemWrapper__rdu3J
                          )}
                        >
                          <GHLink
                            className={classNames(
                              "__wab_instance",
                              sty.ghLink__thup
                            )}
                            href={
                              "https://driver.grubhub.com/campus-jobs/" as const
                            }
                            target={"_self" as const}
                          >
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__hMa6H
                              )}
                            >
                              {"Campus jobs"}
                            </div>
                          </GHLink>
                        </GHPopoverItemWrapper>
                      }
                      defaultOpen={false}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__hgW8G
                        )}
                      >
                        {"Driving oportunities"}
                      </div>
                    </AntdPopover>
                    <AntdPopover
                      arrow={false}
                      className={classNames(
                        "__wab_instance",
                        sty.antdPopover__vJqnx
                      )}
                      content={
                        <React.Fragment>
                          <GHPopoverItemWrapper
                            className={classNames(
                              "__wab_instance",
                              sty.ghPopoverItemWrapper__cXcrO
                            )}
                          >
                            <GHLink
                              className={classNames(
                                "__wab_instance",
                                sty.ghLink__gtEkH
                              )}
                              href={"https://driver.grubhub.com/faq/" as const}
                              target={"_self" as const}
                            >
                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text__jCwFm
                                )}
                              >
                                {"FAQ"}
                              </div>
                            </GHLink>
                          </GHPopoverItemWrapper>
                          <GHPopoverItemWrapper
                            className={classNames(
                              "__wab_instance",
                              sty.ghPopoverItemWrapper__qZn00
                            )}
                          >
                            <GHLink
                              className={classNames(
                                "__wab_instance",
                                sty.ghLink__myJi0
                              )}
                              href={"https://grubhubdrivershop.com/" as const}
                              target={"_blank" as const}
                            >
                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text__tZoav
                                )}
                              >
                                {"Driver shop"}
                              </div>
                            </GHLink>
                          </GHPopoverItemWrapper>
                          <GHPopoverItemWrapper
                            className={classNames(
                              "__wab_instance",
                              sty.ghPopoverItemWrapper___1YQkJ
                            )}
                          >
                            <GHLink
                              className={classNames(
                                "__wab_instance",
                                sty.ghLink__spzii
                              )}
                              href={
                                "https://driver.grubhub.com/driver-safety/" as const
                              }
                              target={"_self" as const}
                            >
                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text___0Mxu2
                                )}
                              >
                                {"Driver Safety"}
                              </div>
                            </GHLink>
                          </GHPopoverItemWrapper>
                          <GHPopoverItemWrapper
                            className={classNames(
                              "__wab_instance",
                              sty.ghPopoverItemWrapper__d3Hhy
                            )}
                          >
                            <GHLink
                              className={classNames(
                                "__wab_instance",
                                sty.ghLink__mCw8U
                              )}
                              href={
                                "https://driver.grubhub.com/driver-safety-council/" as const
                              }
                              target={"_self" as const}
                            >
                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text__zXo
                                )}
                              >
                                {"Driver Safety Council"}
                              </div>
                            </GHLink>
                          </GHPopoverItemWrapper>
                        </React.Fragment>
                      }
                      defaultOpen={false}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__zhgtQ
                        )}
                      >
                        {"Resources"}
                      </div>
                    </AntdPopover>
                    <AntdPopover
                      arrow={false}
                      className={classNames(
                        "__wab_instance",
                        sty.antdPopover__xZn01
                      )}
                      content={
                        <React.Fragment>
                          <GHPopoverItemWrapper
                            className={classNames(
                              "__wab_instance",
                              sty.ghPopoverItemWrapper__jWudI
                            )}
                          >
                            <GHLink
                              className={classNames(
                                "__wab_instance",
                                sty.ghLink__ep5Fa
                              )}
                              href={
                                "https://driver.grubhub.com/driver-stories/" as const
                              }
                              target={"_self" as const}
                            >
                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text__pW5K6
                                )}
                              >
                                {"Driver stories"}
                              </div>
                            </GHLink>
                          </GHPopoverItemWrapper>
                          <GHPopoverItemWrapper
                            className={classNames(
                              "__wab_instance",
                              sty.ghPopoverItemWrapper__zXUlj
                            )}
                          >
                            <GHLink
                              className={classNames(
                                "__wab_instance",
                                sty.ghLink__vcop0
                              )}
                              href={
                                "https://driver.grubhub.com/beyond-the-wheel/" as const
                              }
                              target={"_self" as const}
                            >
                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text__lPls
                                )}
                              >
                                {"Beyond The Wheel"}
                              </div>
                            </GHLink>
                          </GHPopoverItemWrapper>
                          <GHPopoverItemWrapper
                            className={classNames(
                              "__wab_instance",
                              sty.ghPopoverItemWrapper__raBfn
                            )}
                          >
                            <GHLink
                              className={classNames(
                                "__wab_instance",
                                sty.ghLink__xRHu5
                              )}
                              href={
                                "https://driver.grubhub.com/grant/grant-stories/" as const
                              }
                              target={"_self" as const}
                            >
                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text__ssM6U
                                )}
                              >
                                {"Driver Grant"}
                              </div>
                            </GHLink>
                          </GHPopoverItemWrapper>
                        </React.Fragment>
                      }
                      defaultOpen={false}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__cwKjm
                        )}
                      >
                        {"Driver stories"}
                      </div>
                    </AntdPopover>
                    <GHButton
                      backgroundColor={"#0070eb" as const}
                      borderColor={"#0070eb" as const}
                      borderRadius={"2" as const}
                      className={classNames(
                        "__wab_instance",
                        sty.ghButton__mVoWu
                      )}
                    >
                      <GHLink
                        className={classNames(
                          "__wab_instance",
                          sty.ghLink__k318G
                        )}
                        color={"transparent" as const}
                        href={"#form-one-headline" as const}
                        target={"_self" as const}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__fnBoE
                          )}
                        >
                          {"Apply"}
                        </div>
                      </GHLink>
                    </GHButton>
                  </div>
                ) : null}
              </GHDrawer>
            ) : null}
          </p.Stack>
          {true ? (
            <div className={classNames(projectcss.all, sty.freeBox__sdkE9)}>
              <GHHeading
                className={classNames("__wab_instance", sty.ghHeading__f6T7Z)}
                color={"#262632" as const}
                variant={"h6" as const}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__iQeX9
                  )}
                >
                  {
                    "We are prioritizing the health and safety of our delivery partners, "
                  }
                </div>
                <GHLink
                  className={classNames("__wab_instance", sty.ghLink__adpcG)}
                  color={"#4169E1" as const}
                  hoverColor={"#FF8000" as const}
                  href={
                    "https://driver-support.grubhub.com/hc/en-us/categories/360002855511-COVID-19?utm_source=driver.grubhub.com&utm_medium=content_owned&utm_campaign=covid19_website" as const
                  }
                  target={"_self" as const}
                >
                  {"here's how"}
                </GHLink>
              </GHHeading>
            </div>
          ) : null}
          <div className={classNames(projectcss.all, sty.freeBox__l6JAj)}>
            {(
              hasVariant(globalVariants, "screen", "mobileOnly") ? true : true
            ) ? (
              <GHImage
                alt={"Image alt text" as const}
                backgroundColor={"transparent" as const}
                backgroundImage={"" as const}
                className={classNames("__wab_instance", sty.ghImage__sqeFf)}
                height={"100px" as const}
                src={
                  "https://d1pbny5bq445o3.cloudfront.net/driver/wp-content/uploads/2023/01/31102034/GH_Shot3_Driver_Viewing_Phone_cropped_V3_edit2.jpg" as const
                }
                width={"200px" as const}
              />
            ) : null}
            <GHRegistrationForm
              data-plasmic-name={"ghRegistrationForm"}
              data-plasmic-override={overrides.ghRegistrationForm}
              cities={(() => {
                try {
                  return $queries.remoteData.data.response.items[0].fields
                    .citiesList;
                } catch (e) {
                  if (e instanceof TypeError) {
                    return [];
                  }
                  throw e;
                }
              })()}
              className={classNames("__wab_instance", sty.ghRegistrationForm)}
              headingText={
                "Make money on your time and on your terms." as const
              }
              headingVariant={"superMassive" as const}
              states={(() => {
                try {
                  return $queries.remoteData.data.response.items[0].fields
                    .statesList;
                } catch (e) {
                  if (e instanceof TypeError) {
                    return [];
                  }
                  throw e;
                }
              })()}
              subheadingText={"Sign up and start earning:" as const}
              subheadingVariant={"massive" as const}
              submitButtonBackgroundColor={
                true ? ("#007AFF" as const) : undefined
              }
              submitButtonBorderColor={true ? ("#007AFF" as const) : undefined}
              submitButtonBorderRadius={4 as const}
              submitButtonTextColor={true ? ("#FFFFFF" as const) : undefined}
            />
          </div>
          <div className={classNames(projectcss.all, sty.freeBox__tinu5)}>
            {true ? (
              <div className={classNames(projectcss.all, sty.freeBox___2ZEad)}>
                <GHCopy
                  className={classNames("__wab_instance", sty.ghCopy__ikidR)}
                  color={"#404040" as const}
                  strong={false}
                  variant={"massiveLead" as const}
                >
                  {"You only need a few things to get started:"}
                </GHCopy>
                {true ? (
                  <div
                    className={classNames(projectcss.all, sty.freeBox__iTqp9)}
                  >
                    <GHImage
                      alt={"Image alt text" as const}
                      backgroundColor={"transparent" as const}
                      backgroundImage={"" as const}
                      className={classNames(
                        "__wab_instance",
                        sty.ghImage___6Uc8I
                      )}
                      height={"104px" as const}
                      src={
                        "https://d1pbny5bq445o3.cloudfront.net/driver/wp-content/uploads/2021/08/20133021/Icon-GetStarted.png" as const
                      }
                      width={"257px" as const}
                    />

                    <GHList
                      data-plasmic-name={"ghList"}
                      data-plasmic-override={overrides.ghList}
                      className={classNames("__wab_instance", sty.ghList)}
                      heading={``}
                      items={(() => {
                        try {
                          return $queries.remoteData.data.response.items[0]
                            .fields.gettingStarted;
                        } catch (e) {
                          if (e instanceof TypeError) {
                            return [];
                          }
                          throw e;
                        }
                      })()}
                      listItemBulletColor={"#FF8801" as const}
                    />
                  </div>
                ) : null}
                <GHCopy
                  className={classNames("__wab_instance", sty.ghCopy__z3Tj0)}
                  color={"#262632" as const}
                  strong={false}
                  variant={"body" as const}
                >
                  {
                    "All drivers must also be at least 19 years of age, but no previous delivery experience is required!\n\n"
                  }
                </GHCopy>
                <GHButton
                  backgroundColor={true ? ("#007AFF" as const) : undefined}
                  borderColor={true ? ("#007AFF" as const) : undefined}
                  borderRadius={4 as const}
                  className={classNames("__wab_instance", sty.ghButton__ra38B)}
                >
                  <GHLink
                    className={classNames("__wab_instance", sty.ghLink__pnW0)}
                    color={true ? ("#FFFFFF" as const) : undefined}
                    hoverColor={"#FFFFFF00" as const}
                    href={"#form-one-headline" as const}
                    target={"_blank" as const}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__b3PF2
                      )}
                    >
                      {"Apply"}
                    </div>
                  </GHLink>
                </GHButton>
              </div>
            ) : null}
          </div>
          <div className={classNames(projectcss.all, sty.freeBox__gYzMm)}>
            {true ? (
              <div className={classNames(projectcss.all, sty.freeBox___7JY8)}>
                <GHHeading
                  className={classNames("__wab_instance", sty.ghHeading__xok8Z)}
                  color={"#262632" as const}
                  variant={"h2" as const}
                >
                  {"Set your hours. Deliver. Get paid."}
                </GHHeading>
                <GHCopy
                  className={classNames("__wab_instance", sty.ghCopy___0E0WW)}
                  color={"#262632" as const}
                  strong={false}
                  variant={"body" as const}
                >
                  {
                    "With Grubhub, it’s easy to earn competitive pay, keep 100% of your tips and create your own flexible schedule.\n\n\n\n"
                  }
                </GHCopy>
                {true ? (
                  <div
                    className={classNames(projectcss.all, sty.freeBox__nlOm)}
                  >
                    <div
                      className={classNames(projectcss.all, sty.freeBox__nutuW)}
                    >
                      {true ? (
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__hWm9O
                          )}
                        >
                          <GHImage
                            alt={"Image alt text" as const}
                            backgroundColor={"transparent" as const}
                            backgroundImage={"" as const}
                            className={classNames(
                              "__wab_instance",
                              sty.ghImage__dCLh
                            )}
                            height={"100px" as const}
                            src={
                              "https://d1pbny5bq445o3.cloudfront.net/driver/wp-content/uploads/2021/08/20133027/Icon-HowItWorks-Signup-298x300.png" as const
                            }
                            width={"100px" as const}
                          />

                          <div
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__lzOsx
                            )}
                          >
                            <GHHeading
                              className={classNames(
                                "__wab_instance",
                                sty.ghHeading___5MInV
                              )}
                              color={"#262632" as const}
                              variant={"h1" as const}
                            >
                              {"SIGN UP"}
                            </GHHeading>
                            <GHCopy
                              className={classNames(
                                "__wab_instance",
                                sty.ghCopy___8Ze4F
                              )}
                              color={"#262632" as const}
                              strong={false}
                              variant={"body" as const}
                            >
                              {
                                "Submit your application, driver’s license and insurance."
                              }
                            </GHCopy>
                          </div>
                        </div>
                      ) : null}
                      {true ? (
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox___9EbM
                          )}
                        >
                          <GHImage
                            alt={"Image alt text" as const}
                            backgroundColor={"transparent" as const}
                            backgroundImage={"" as const}
                            className={classNames(
                              "__wab_instance",
                              sty.ghImage__r4BwU
                            )}
                            height={"100px" as const}
                            src={
                              "https://d1pbny5bq445o3.cloudfront.net/driver/wp-content/uploads/2021/08/20133023/Icon-HowItWorks-GearUp.png" as const
                            }
                            width={"100px" as const}
                          />

                          <div
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__hyDxR
                            )}
                          >
                            <GHHeading
                              className={classNames(
                                "__wab_instance",
                                sty.ghHeading___4BkN9
                              )}
                              color={"#262632" as const}
                              variant={"h1" as const}
                            >
                              {"GEAR UP"}
                            </GHHeading>
                            <GHCopy
                              className={classNames(
                                "__wab_instance",
                                sty.ghCopy__tkg6L
                              )}
                              color={"#262632" as const}
                              strong={false}
                              variant={"body" as const}
                            >
                              {
                                "Get car decals, warming bags and more from Grubhub or use your own."
                              }
                            </GHCopy>
                          </div>
                        </div>
                      ) : null}
                      {true ? (
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__vf2Ww
                          )}
                        >
                          <GHImage
                            alt={"Image alt text" as const}
                            backgroundColor={"transparent" as const}
                            backgroundImage={"" as const}
                            className={classNames(
                              "__wab_instance",
                              sty.ghImage__nwYse
                            )}
                            height={"100px" as const}
                            src={
                              "https://d1pbny5bq445o3.cloudfront.net/driver/wp-content/uploads/2021/08/20133025/Icon-HowItWorks-GetReady.png" as const
                            }
                            width={"100px" as const}
                          />

                          <div
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__fGad
                            )}
                          >
                            <GHHeading
                              className={classNames(
                                "__wab_instance",
                                sty.ghHeading___0Pzkg
                              )}
                              color={"#262632" as const}
                              variant={"h1" as const}
                            >
                              {"GET READY"}
                            </GHHeading>
                            <GHCopy
                              className={classNames(
                                "__wab_instance",
                                sty.ghCopy__y5Uro
                              )}
                              color={"#262632" as const}
                              strong={false}
                              variant={"body" as const}
                            >
                              {
                                "Access optional onboarding — covering topics like the app, scheduling, picking up orders and more."
                              }
                            </GHCopy>
                          </div>
                        </div>
                      ) : null}
                      {true ? (
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__thmkT
                          )}
                        >
                          <GHImage
                            alt={"Image alt text" as const}
                            backgroundColor={"transparent" as const}
                            backgroundImage={"" as const}
                            className={classNames(
                              "__wab_instance",
                              sty.ghImage__kaw2L
                            )}
                            height={"100px" as const}
                            src={
                              "https://d1pbny5bq445o3.cloudfront.net/driver/wp-content/uploads/2020/01/14113751/Icon-HowItWorks-PickHours.png" as const
                            }
                            width={"100px" as const}
                          />

                          <div
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__ubv7K
                            )}
                          >
                            <GHHeading
                              className={classNames(
                                "__wab_instance",
                                sty.ghHeading__adRVo
                              )}
                              color={"#262632" as const}
                              variant={"h1" as const}
                            >
                              {"PICK HOURS"}
                            </GHHeading>
                            <GHCopy
                              className={classNames(
                                "__wab_instance",
                                sty.ghCopy___8D9Rs
                              )}
                              color={"#262632" as const}
                              strong={false}
                              variant={"body" as const}
                            >
                              {"Make your own schedule and hit the road!"}
                            </GHCopy>
                          </div>
                        </div>
                      ) : null}
                    </div>
                  </div>
                ) : null}
                <GHHeading
                  className={classNames("__wab_instance", sty.ghHeading__gi68L)}
                  color={"#262632" as const}
                  variant={"h6" as const}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__ia5P
                    )}
                  >
                    {"Got more questions? "}
                  </div>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__smpZn
                    )}
                  >
                    {"Here are some answers to "}
                  </div>
                  <GHLink
                    className={classNames("__wab_instance", sty.ghLink__gAnLb)}
                    color={"#4169E1" as const}
                    hoverColor={"#FF8000" as const}
                    href={
                      "https://driver-support.grubhub.com/hc/en-us/categories/360002855511-COVID-19?utm_source=driver.grubhub.com&utm_medium=content_owned&utm_campaign=covid19_website" as const
                    }
                    target={"_self" as const}
                  >
                    {"frequently asked questions"}
                  </GHLink>
                  {(
                    hasVariant(globalVariants, "screen", "mobileOnly")
                      ? true
                      : true
                  ) ? (
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__x8WyR
                      )}
                    >
                      {"."}
                    </div>
                  ) : null}
                </GHHeading>
                <GHButton
                  backgroundColor={true ? ("#007AFF" as const) : undefined}
                  borderColor={true ? ("#007AFF" as const) : undefined}
                  borderRadius={4 as const}
                  className={classNames("__wab_instance", sty.ghButton__hMe0A)}
                >
                  <GHLink
                    className={classNames("__wab_instance", sty.ghLink___5NMhq)}
                    color={true ? ("#FFFFFF" as const) : undefined}
                    hoverColor={"#FFFFFF00" as const}
                    href={"#form-one-headline" as const}
                    target={"_blank" as const}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text___5El4L
                      )}
                    >
                      {"Apply to drive"}
                    </div>
                  </GHLink>
                </GHButton>
              </div>
            ) : null}
          </div>
          <div className={classNames(projectcss.all, sty.freeBox__nPbqA)}>
            {true ? (
              <div className={classNames(projectcss.all, sty.freeBox___2YtW2)}>
                <GHHeading
                  className={classNames("__wab_instance", sty.ghHeading__hyQS)}
                  color={"#262632" as const}
                  variant={"h2" as const}
                >
                  {"When it comes to getting paid fast, you have options"}
                </GHHeading>
                <div className={classNames(projectcss.all, sty.freeBox__jhwiE)}>
                  <GHImage
                    alt={"Image alt text" as const}
                    backgroundColor={"transparent" as const}
                    backgroundImage={"" as const}
                    className={classNames(
                      "__wab_instance",
                      sty.ghImage___8BId0
                    )}
                    height={"100px" as const}
                    src={
                      "https://d1pbny5bq445o3.cloudfront.net/driver/wp-content/uploads/2022/03/24114235/BankGroup_DSK.png" as const
                    }
                    width={"200px" as const}
                  />
                </div>
                {true ? (
                  <div
                    className={classNames(projectcss.all, sty.freeBox__oCzY5)}
                  >
                    <GHImage
                      alt={"Image alt text" as const}
                      backgroundColor={"transparent" as const}
                      backgroundImage={"" as const}
                      className={classNames(
                        "__wab_instance",
                        sty.ghImage__v3P0O
                      )}
                      height={"100px" as const}
                      src={
                        "https://d1pbny5bq445o3.cloudfront.net/driver/wp-content/uploads/2020/01/14113751/Icon-HowItWorks-PickHours.png" as const
                      }
                      width={"100px" as const}
                    />

                    <div
                      className={classNames(projectcss.all, sty.freeBox__daCxj)}
                    >
                      <GHCopy
                        className={classNames(
                          "__wab_instance",
                          sty.ghCopy__xOzJ8
                        )}
                        color={"#262632" as const}
                        strong={false}
                        variant={"body" as const}
                      >
                        {
                          "With Grubhub Instant Cashout you can cash out your earnings as often as you want. Connect a Chase checking or savings account to get your money in moments with no Instant Cashout fees or use another bank for a small $0.50 fee per transaction. "
                        }
                      </GHCopy>
                      <GHCopy
                        className={classNames(
                          "__wab_instance",
                          sty.ghCopy__lRyTv
                        )}
                        color={"#262632" as const}
                        strong={false}
                        variant={"body" as const}
                      >
                        {
                          "Want to cash out directly to your bank’s Visa or Mastercard debit card? It’s quick and reliable, and each transaction costs just $0.50. "
                        }
                      </GHCopy>
                    </div>
                  </div>
                ) : null}
                <GHButton
                  backgroundColor={true ? ("#007AFF" as const) : undefined}
                  borderColor={true ? ("#007AFF" as const) : undefined}
                  borderRadius={4 as const}
                  className={classNames("__wab_instance", sty.ghButton__wthM6)}
                >
                  <GHLink
                    className={classNames("__wab_instance", sty.ghLink__prxsh)}
                    color={true ? ("#FFFFFF" as const) : undefined}
                    hoverColor={"#FFFFFF00" as const}
                    href={"#form-one-headline" as const}
                    target={"_blank" as const}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__bHQyt
                      )}
                    >
                      {"Apply to drive"}
                    </div>
                  </GHLink>
                </GHButton>
              </div>
            ) : null}
          </div>
          <div className={classNames(projectcss.all, sty.freeBox__hWmtq)}>
            {true ? (
              <div className={classNames(projectcss.all, sty.freeBox__nniMp)}>
                {true ? (
                  <div
                    className={classNames(projectcss.all, sty.freeBox__fg67)}
                  >
                    <GHImage
                      alt={"Image alt text" as const}
                      backgroundColor={"transparent" as const}
                      backgroundImage={"" as const}
                      className={classNames(
                        "__wab_instance",
                        sty.ghImage__oVNjD
                      )}
                      height={"350px" as const}
                      src={
                        "https://d1pbny5bq445o3.cloudfront.net/driver/wp-content/uploads/2022/03/10025724/HeaderImage_SquareBTW.gif" as const
                      }
                      width={"400px" as const}
                    />

                    <div
                      className={classNames(
                        projectcss.all,
                        sty.freeBox___5LhKo
                      )}
                    >
                      <GHCopy
                        className={classNames(
                          "__wab_instance",
                          sty.ghCopy__tkwgu
                        )}
                        color={"#262632" as const}
                        strong={false}
                        variant={"body" as const}
                      >
                        {
                          "From aspirations to relationships, Grubhub drivers invite us into their lives and discuss how delivering helps them move forward without limits."
                        }
                      </GHCopy>
                      <GHButton
                        backgroundColor={
                          true ? ("#007AFF" as const) : undefined
                        }
                        borderColor={true ? ("#007AFF" as const) : undefined}
                        borderRadius={4 as const}
                        className={classNames(
                          "__wab_instance",
                          sty.ghButton__cpz3L
                        )}
                      >
                        <GHLink
                          className={classNames(
                            "__wab_instance",
                            sty.ghLink__gXtz3
                          )}
                          color={true ? ("#FFFFFF" as const) : undefined}
                          hoverColor={"#FFFFFF00" as const}
                          href={"#form-one-headline" as const}
                          target={"_blank" as const}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__zJnsU
                            )}
                          >
                            {"See stories"}
                          </div>
                        </GHLink>
                      </GHButton>
                    </div>
                  </div>
                ) : null}
              </div>
            ) : null}
          </div>
          <div className={classNames(projectcss.all, sty.freeBox___1NcUj)}>
            <div className={classNames(projectcss.all, sty.freeBox__hge1B)}>
              <GHImage
                alt={"Image alt text" as const}
                backgroundColor={"transparent" as const}
                backgroundImage={"" as const}
                className={classNames("__wab_instance", sty.ghImage__d6HcE)}
                height={"100px" as const}
                src={
                  "https://driver.grubhub.com/wp-content/themes/drivergrubhubcom/dist/images/gh-footer-logo.png" as const
                }
                width={"200px" as const}
              />

              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__v5Hiu)}
              >
                <GHLink
                  className={classNames("__wab_instance", sty.ghLink__nvbd7)}
                  color={"#FFFFFF" as const}
                  hoverColor={"#FF8001" as const}
                  href={"https://example.com" as const}
                  target={"_blank" as const}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text___1Qtcq
                    )}
                  >
                    {"Become a driver"}
                  </div>
                </GHLink>
                <GHLink
                  className={classNames("__wab_instance", sty.ghLink___7He4R)}
                  color={"#FFFFFF" as const}
                  hoverColor={"#FF8001" as const}
                  href={"https://example.com" as const}
                  target={"_blank" as const}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__sst2T
                    )}
                  >
                    {"Privacy policy"}
                  </div>
                </GHLink>
                <GHLink
                  className={classNames("__wab_instance", sty.ghLink__enKy0)}
                  color={"#FFFFFF" as const}
                  hoverColor={"#FF8001" as const}
                  href={"https://example.com" as const}
                  target={"_blank" as const}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__fd9U7
                    )}
                  >
                    {"Terms of use"}
                  </div>
                </GHLink>
              </p.Stack>
              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__wthK)}
              >
                <GHLink
                  className={classNames("__wab_instance", sty.ghLink__u8KuY)}
                  color={"#FFFFFF" as const}
                  hoverColor={"#FF8001" as const}
                  href={"https://example.com" as const}
                  target={"_blank" as const}
                >
                  <GHImage
                    alt={"Image alt text" as const}
                    backgroundColor={"transparent" as const}
                    backgroundImage={"" as const}
                    className={classNames("__wab_instance", sty.ghImage__s27Ob)}
                    height={"100px" as const}
                    src={
                      "https://driver.grubhub.com/wp-content/themes/drivergrubhubcom/dist/images/icon_apple_store.png" as const
                    }
                    width={"200px" as const}
                  />
                </GHLink>
                <GHLink
                  className={classNames("__wab_instance", sty.ghLink__ofNec)}
                  color={"#FFFFFF" as const}
                  hoverColor={"#FF8001" as const}
                  href={"https://example.com" as const}
                  target={"_blank" as const}
                >
                  <GHImage
                    alt={"Image alt text" as const}
                    backgroundColor={"transparent" as const}
                    backgroundImage={"" as const}
                    className={classNames("__wab_instance", sty.ghImage__rLmPk)}
                    height={"100px" as const}
                    src={
                      "https://driver.grubhub.com/wp-content/themes/drivergrubhubcom/dist/images/icon_google_play.png" as const
                    }
                    width={"200px" as const}
                  />
                </GHLink>
              </p.Stack>
              <GHCopy
                className={classNames("__wab_instance", sty.ghCopy__yu7Cu)}
                color={"#FFFFFF" as const}
                strong={false}
                variant={"body" as const}
              >
                {"© Copyright 2023 Grubhub Holdings Inc."}
              </GHCopy>
              <GHCopy
                className={classNames("__wab_instance", sty.ghCopy___3ZcNe)}
                color={"#FFFFFF" as const}
                strong={false}
                variant={"body" as const}
              >
                {
                  "Deposit products provided by JPMorgan Chase Bank, N.A. Member FDIC"
                }
              </GHCopy>
            </div>
            <div className={classNames(projectcss.all, sty.freeBox__gSd2C)}>
              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__bbWw)}
              >
                <div className={classNames(projectcss.all, sty.freeBox__abSxW)}>
                  <GHHeading
                    className={classNames(
                      "__wab_instance",
                      sty.ghHeading__zfzkh
                    )}
                    color={"#262632" as const}
                    variant={"h1" as const}
                  >
                    {"Learn more"}
                  </GHHeading>
                  <GHLink
                    className={classNames("__wab_instance", sty.ghLink__on22W)}
                    color={"#FFFFFF" as const}
                    hoverColor={"#FF8001" as const}
                    href={"https://example.com" as const}
                    target={"_blank" as const}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__nir10
                      )}
                    >
                      {"Recognition"}
                    </div>
                  </GHLink>
                  <GHLink
                    className={classNames("__wab_instance", sty.ghLink__z2Pwn)}
                    color={"#FFFFFF" as const}
                    hoverColor={"#FF8001" as const}
                    href={"https://example.com" as const}
                    target={"_blank" as const}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__jntXa
                      )}
                    >
                      {"Rewards"}
                    </div>
                  </GHLink>
                  <GHLink
                    className={classNames("__wab_instance", sty.ghLink__mcDfx)}
                    color={"#FFFFFF" as const}
                    hoverColor={"#FF8001" as const}
                    href={"https://example.com" as const}
                    target={"_blank" as const}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__gk0U5
                      )}
                    >
                      {"Scheduling"}
                    </div>
                  </GHLink>
                  <GHLink
                    className={classNames("__wab_instance", sty.ghLink___76WtI)}
                    color={"#FFFFFF" as const}
                    hoverColor={"#FF8001" as const}
                    href={"https://example.com" as const}
                    target={"_blank" as const}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__fzVU
                      )}
                    >
                      {"Pay"}
                    </div>
                  </GHLink>
                  <GHLink
                    className={classNames("__wab_instance", sty.ghLink__fWeY)}
                    color={"#FFFFFF" as const}
                    hoverColor={"#FF8001" as const}
                    href={"https://example.com" as const}
                    target={"_blank" as const}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__tlGwf
                      )}
                    >
                      {"Driver Stories"}
                    </div>
                  </GHLink>
                  <GHLink
                    className={classNames("__wab_instance", sty.ghLink__oWnMi)}
                    color={"#FFFFFF" as const}
                    hoverColor={"#FF8001" as const}
                    href={"https://example.com" as const}
                    target={"_blank" as const}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__uYaxM
                      )}
                    >
                      {"Driver Safety"}
                    </div>
                  </GHLink>
                  <GHLink
                    className={classNames("__wab_instance", sty.ghLink__jJeLa)}
                    color={"#FFFFFF" as const}
                    hoverColor={"#FF8001" as const}
                    href={"https://example.com" as const}
                    target={"_blank" as const}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__ty6Tm
                      )}
                    >
                      {"Driver Safety Council"}
                    </div>
                  </GHLink>
                </div>
                <div
                  className={classNames(projectcss.all, sty.freeBox___3GTvb)}
                >
                  <GHHeading
                    className={classNames(
                      "__wab_instance",
                      sty.ghHeading__pahml
                    )}
                    color={"#262632" as const}
                    variant={"h1" as const}
                  >
                    {"Partner with us"}
                  </GHHeading>
                  <GHLink
                    className={classNames("__wab_instance", sty.ghLink__jdXr)}
                    color={"#FFFFFF" as const}
                    hoverColor={"#FF8001" as const}
                    href={"https://example.com" as const}
                    target={"_blank" as const}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__rEw70
                      )}
                    >
                      {"For Companies"}
                    </div>
                  </GHLink>
                  <GHLink
                    className={classNames("__wab_instance", sty.ghLink__y5Z7G)}
                    color={"#FFFFFF" as const}
                    hoverColor={"#FF8001" as const}
                    href={"https://example.com" as const}
                    target={"_blank" as const}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__f7J3I
                      )}
                    >
                      {"For Restaurants"}
                    </div>
                  </GHLink>
                  <GHLink
                    className={classNames("__wab_instance", sty.ghLink__umKj)}
                    color={"#FFFFFF" as const}
                    hoverColor={"#FF8001" as const}
                    href={"https://example.com" as const}
                    target={"_blank" as const}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__wPtU
                      )}
                    >
                      {"For Drivers"}
                    </div>
                  </GHLink>
                  <GHLink
                    className={classNames("__wab_instance", sty.ghLink__jRdW)}
                    color={"#FFFFFF" as const}
                    hoverColor={"#FF8001" as const}
                    href={"https://example.com" as const}
                    target={"_blank" as const}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text___5CzZu
                      )}
                    >
                      {"Order Now"}
                    </div>
                  </GHLink>
                </div>
                <div className={classNames(projectcss.all, sty.freeBox__vsp3K)}>
                  <GHHeading
                    className={classNames(
                      "__wab_instance",
                      sty.ghHeading__d32N5
                    )}
                    color={"#262632" as const}
                    variant={"h1" as const}
                  >
                    {"Driver support"}
                  </GHHeading>
                  <GHLink
                    className={classNames("__wab_instance", sty.ghLink__a3Cdu)}
                    color={"#FFFFFF" as const}
                    hoverColor={"#FF8001" as const}
                    href={"https://example.com" as const}
                    target={"_blank" as const}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text___3F9Ng
                      )}
                    >
                      {"Grubhub Driver Shop"}
                    </div>
                  </GHLink>
                  <GHLink
                    className={classNames("__wab_instance", sty.ghLink__mKs3J)}
                    color={"#FFFFFF" as const}
                    hoverColor={"#FF8001" as const}
                    href={"https://example.com" as const}
                    target={"_blank" as const}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text___5W4E4
                      )}
                    >
                      {"Grubhub Driver Grant"}
                    </div>
                  </GHLink>
                  <GHLink
                    className={classNames("__wab_instance", sty.ghLink__tawC)}
                    color={"#FFFFFF" as const}
                    hoverColor={"#FF8001" as const}
                    href={"https://example.com" as const}
                    target={"_blank" as const}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text___7IYAg
                      )}
                    >
                      {"FAQ"}
                    </div>
                  </GHLink>
                </div>
              </p.Stack>
            </div>
          </div>
        </div>
      </div>
    </React.Fragment>
  ) as React.ReactElement | null;
}

const PlasmicDescendants = {
  root: ["root", "ghLogoLink", "ghDrawer", "ghRegistrationForm", "ghList"],
  ghLogoLink: ["ghLogoLink"],
  ghDrawer: ["ghDrawer"],
  ghRegistrationForm: ["ghRegistrationForm"],
  ghList: ["ghList"]
} as const;
type NodeNameType = keyof typeof PlasmicDescendants;
type DescendantsType<T extends NodeNameType> =
  (typeof PlasmicDescendants)[T][number];
type NodeDefaultElementType = {
  root: "div";
  ghLogoLink: typeof GhLogoLink;
  ghDrawer: typeof GHDrawer;
  ghRegistrationForm: typeof GHRegistrationForm;
  ghList: typeof GHList;
};

type ReservedPropsType = "variants" | "args" | "overrides";
type NodeOverridesType<T extends NodeNameType> = Pick<
  PlasmicDriverHome__OverridesType,
  DescendantsType<T>
>;
type NodeComponentProps<T extends NodeNameType> =
  // Explicitly specify variants, args, and overrides as objects
  {
    variants?: PlasmicDriverHome__VariantsArgs;
    args?: PlasmicDriverHome__ArgsType;
    overrides?: NodeOverridesType<T>;
  } & Omit<PlasmicDriverHome__VariantsArgs, ReservedPropsType> & // Specify variants directly as props
    /* Specify args directly as props*/ Omit<
      PlasmicDriverHome__ArgsType,
      ReservedPropsType
    > &
    /* Specify overrides for each element directly as props*/ Omit<
      NodeOverridesType<T>,
      ReservedPropsType | VariantPropType | ArgPropType
    > &
    /* Specify props for the root element*/ Omit<
      Partial<React.ComponentProps<NodeDefaultElementType[T]>>,
      ReservedPropsType | VariantPropType | ArgPropType | DescendantsType<T>
    >;

function makeNodeComponent<NodeName extends NodeNameType>(nodeName: NodeName) {
  type PropsType = NodeComponentProps<NodeName> & { key?: React.Key };
  const func = function <T extends PropsType>(
    props: T & StrictProps<T, PropsType>
  ) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: [...PlasmicDescendants[nodeName]],
          internalArgPropNames: PlasmicDriverHome__ArgProps,
          internalVariantPropNames: PlasmicDriverHome__VariantProps
        }),
      [props, nodeName]
    );
    return PlasmicDriverHome__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicDriverHome";
  } else {
    func.displayName = `PlasmicDriverHome.${nodeName}`;
  }
  return func;
}

export const PlasmicDriverHome = Object.assign(
  // Top-level PlasmicDriverHome renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    ghLogoLink: makeNodeComponent("ghLogoLink"),
    ghDrawer: makeNodeComponent("ghDrawer"),
    ghRegistrationForm: makeNodeComponent("ghRegistrationForm"),
    ghList: makeNodeComponent("ghList"),

    // Metadata about props expected for PlasmicDriverHome
    internalVariantProps: PlasmicDriverHome__VariantProps,
    internalArgProps: PlasmicDriverHome__ArgProps,

    // Page metadata
    pageMetadata: {
      title: "Driver Home Page",
      description: "",
      ogImageSrc: "",
      canonical: ""
    }
  }
);

export default PlasmicDriverHome;
/* prettier-ignore-end */
